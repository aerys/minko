function(add_flags)
    if (CMAKE_SIZEOF_VOID_P EQUAL 8)
        set(BITNESS 64 PARENT_SCOPE)
        set(BITNESS 64)
    else ()
        set(BITNESS 32 PARENT_SCOPE)
        set(BITNESS 32)
    endif ()

    if (NOT CMAKE_BUILD_TYPE)
        set (CMAKE_BUILD_TYPE "Debug" PARENT_SCOPE)
    endif ()

    if (UNIX AND NOT CMAKE_SYSTEM_NAME STREQUAL "Emscripten")
        set (CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -MMD -m${BITNESS}" )
        set (CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} -MMD -m${BITNESS}" )
        set (CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -MMD -m${BITNESS}" )
        set (CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} -MMD -m${BITNESS}" )
    # elseif (WIN32)
    # set (CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -D_USE_MATH_DEFINES" )
    # set (CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} -D_USE_MATH_DEFINES" )
    # set (CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -D_USE_MATH_DEFINES" )
    # set (CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} -D_USE_MATH_DEFINES" )
        # add a flag to remove the error C2338 on Visual Studio 15 2017 (https://stackoverflow.com/a/30811901/10069938)
    # set (CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -D_SILENCE_STDEXT_HASH_DEPRECATION_WARNINGS" )
    # set (CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -D_SILENCE_STDEXT_HASH_DEPRECATION_WARNINGS" )
    endif ()
    set (CMAKE_CXX_FLAGS_DEBUG
        "${CMAKE_CXX_FLAGS_DEBUG} -MP -std=c++11 -DJSON_IS_AMALGAMATION" # -DDEBUG -DJSON_IS_AMALGAMATION"
        PARENT_SCOPE
    )
    set (CMAKE_C_FLAGS_DEBUG
        "${CMAKE_C_FLAGS_DEBUG} -MP -DJSON_IS_AMALGAMATION" # -DDEBUG -DJSON_IS_AMALGAMATION"
        PARENT_SCOPE
    )
    set (CMAKE_CXX_FLAGS_RELEASE
        "${CMAKE_CXX_FLAGS_RELEASE} -MP -DJSON_IS_AMALGAMATION -std=c++11" #-DNDEBUG -DJSON_IS_AMALGAMATION
        PARENT_SCOPE
    )
    set (CMAKE_C_FLAGS_RELEASE
        "${CMAKE_C_FLAGS_RELEASE} -MP -DJSON_IS_AMALGAMATION" # -DNDEBUG -DJSON_IS_AMALGAMATION"
        PARENT_SCOPE
    )

    if (CMAKE_SYSTEM_NAME STREQUAL "Emscripten")
        add_definitions("-MMD -DEMSCRIPTEN")
    endif()
endfunction()

function (config_output_path)
    if (CMAKE_SIZEOF_VOID_P EQUAL 8)
        set(BITNESS 64)
    else ()
        set(BITNESS 32)
    endif ()

    string (TOLOWER ${CMAKE_BUILD_TYPE} BUILD_TYPE)
    string (TOLOWER ${CMAKE_SYSTEM_NAME} SYSTEM_NAME)
    
    if (CMAKE_SYSTEM_NAME STREQUAL "Emscripten")
    set (BITNESS "")
    set (SYSTEM_NAME "asmjs")
        if (${WASM})
            set (SYSTEM_NAME "wasm")
        endif ()
    endif ()
    set (OUTPUT_PATH
        "${CMAKE_CURRENT_BINARY_DIR}/bin/${SYSTEM_NAME}${BITNESS}/${BUILD_TYPE}"
        PARENT_SCOPE
    )
    set (OUTPUT_PATH
        "${CMAKE_CURRENT_BINARY_DIR}/bin/${SYSTEM_NAME}${BITNESS}/${BUILD_TYPE}"
    )

    set (CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${OUTPUT_PATH} PARENT_SCOPE)
    set (CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${OUTPUT_PATH} PARENT_SCOPE)
    set (CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${OUTPUT_PATH} PARENT_SCOPE)
    set (CMAKE_RUNTIME_OUTPUT_DIRECTORY ${OUTPUT_PATH} PARENT_SCOPE})
    set (CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${OUTPUT_PATH} PARENT_SCOPE)
    set (CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${OUTPUT_PATH} PARENT_SCOPE)
    set (CMAKE_LIBRARY_OUTPUT_DIRECTORY ${OUTPUT_PATH} PARENT_SCOPE)
    set (CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG ${OUTPUT_PATH} PARENT_SCOPE)
    set (CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE ${OUTPUT_PATH}PARENT_SCOPE)
endfunction ()