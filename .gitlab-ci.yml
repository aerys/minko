stages:
  - build
  - test
  - archive
  - release
  - trigger

.build_with_artifacts_template: &build_with_artifacts_template
  artifacts:
    name: "${CI_PROJECT_NAME}-${CI_JOB_NAME}-${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHA}"
    expire_in: 6 hr
    paths:
      - build/module
      - build/framework/enable.cmake
      - build/framework/bin
      - build/framework/asset
      - build/framework/lib
      - build/framework/include
      - build/plugin/*/bin
      - build/plugin/*/asset
      - build/plugin/*/lib
      - build/plugin/*/include
      - build/plugin/*/enable.cmake
      - build/plugin/html-overlay/src/android/tasks/*.java
      - build/plugin/html-overlay/src/android/webview/*.java
      - build/plugin/sensors/src/android/*.java
      - build/plugin/nodejs-worker/src/minko/file/*.java
      - build/plugin/video-camera/src/minko/video/*.java
      - build/template
      - build/cmake
      - build/test
      - LICENSE.md
      - README.md

.archive_template: &archive_template
  stage: archive
  image: registry.aerys.in/aerys/smartshape-docker/archive:2221
  except:
    - master
  script:
    - cd "${CI_PROJECT_DIR}"
    - tar -cjSf "/tmp/${ARCHIVE_NAME}" *
    - b2 authorize_account "${B2_ACCOUNT_ID}" "${B2_APPLICATION_KEY}"
    - b2 upload_file --noProgress --info CI_PIPELINE_ID=${CI_PIPELINE_ID} --info CI_COMMIT_SHA=${CI_COMMIT_SHA} "${B2_ARTIFACTS_BUCKET}" "/tmp/${ARCHIVE_NAME}" "${CI_PROJECT_NAME}/${CI_COMMIT_REF_SLUG}/${ARCHIVE_NAME}"

build:html5:
  <<: *build_with_artifacts_template
  stage: build
  image: registry.aerys.in/aerys/smartshape-docker/html5:14459
  script:
    - mkdir -p build && cd build
    - cmake -DCMAKE_BUILD_TYPE=Release -DWITH_WASM=ON -DWITH_EXAMPLES=OFF -DWITH_PLUGINS=ON -DCMAKE_TOOLCHAIN_FILE=/emsdk_portable/emscripten/sdk/cmake/Modules/Platform/Emscripten.cmake ..
    - make -j$(nproc)

build:android:
  <<: *build_with_artifacts_template
  stage: build
  image: registry.aerys.in/aerys/smartshape-docker/android:5702
  script:
    - mkdir -p build && cd build
    - cmake -DCMAKE_BUILD_TYPE=Release -DWITH_EXAMPLES=OFF -DWITH_PLUGINS=ON -DWITH_NODEJS_WORKER=ON -DCMAKE_TOOLCHAIN_FILE=/opt/android-ndk-linux/build/cmake/android.toolchain.cmake ..
    - make

build:linux:
  <<: *build_with_artifacts_template
  stage: build
  image: registry.aerys.in/aerys/smartshape-docker/linux64:8398
  script:
    - mkdir -p build && cd build
    - cmake -DCMAKE_BUILD_TYPE=Release -DWITH_EXAMPLES=OFF -DWITH_PLUGINS=ON ..
    - make -j$(nproc)

build:linux_offscreen:
  <<: *build_with_artifacts_template
  stage: build
  image: registry.aerys.in/aerys/smartshape-docker/linux64:8398
  script:
    - ./plugin/serializer/script/download_dependencies.sh .
    - mkdir -p build && cd build
    - cmake -DCMAKE_BUILD_TYPE=Release -DWITH_EXAMPLES=OFF -DWITH_PLUGINS=ON -DWITH_OFFSCREEN=ON -DWITH_TEXTURE_COMPRESSOR=ON -DWITH_TESTS=ON ..
    - make -j$(nproc)

build:windows64:
  <<: *build_with_artifacts_template
  stage: build
  tags:
    - windows
  script:
    - $env:MINKO_HOME="{0}" -f (Get-Location).ToString()
    - bash plugin\serializer\script\download_dependencies.sh .
    - New-Item -ItemType Directory -Force -Path build
    - Set-Location -Path build
    - cmake -G "Visual Studio 15 2017 Win64" -DCMAKE_BUILD_TYPE=Release -DWITH_EXAMPLES=OFF -DWITH_PLUGINS=ON ..
    - msbuild Project.sln /property:Configuration=Release /property:Platform=x64 /m:4

build:windows64_offscreen:
  <<: *build_with_artifacts_template
  stage: build
  tags:
    - windows
  script:
    - set MINKO_HOME=%cd%
    - bash plugin\serializer\script\download_dependencies.sh .
    - if not exist build mkdir build
    - cd build
    - cmake -G "Visual Studio 15 2017 Win64" -DCMAKE_BUILD_TYPE=Release -DWITH_EXAMPLES=OFF -DWITH_PLUGINS=ON -DWITH_OFFSCREEN=ON -DWITH_TEXTURE_COMPRESSOR=ON -DWITH_TESTS=ON ..
    - msbuild Project.sln /property:Configuration=Release /property:Platform=x64 /m:4

# Disabled until https://git.aerys.in/aerys/smartshape-engine/issues/166 is fixed.
# test:windows64_offscreen:
#   stage: test
#   tags:
#     - windows
#   dependencies:
#     - build:windows64_offscreen
#   artifacts:
#     name: "${CI_PROJECT_NAME}-${CI_JOB_NAME}-${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHA}"
#     when: on_failure
#     expire_in: 1 hr
#     paths:
#       - build/test
#   script:
#     - cd .\build\test\bin
#     - minko-test.exe

test:linux_offscreen:
  stage: test
  image: registry.aerys.in/aerys/smartshape-docker/linux64:8398
  dependencies:
    - build:linux_offscreen
  artifacts:
    name: "${CI_PROJECT_NAME}-${CI_JOB_NAME}-${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHA}"
    when: on_failure
    expire_in: 1 hr
    paths:
      - build/test
  script:
    - cd ./build/test/bin
    - ./minko-test

archive:linux_offscreen:
  <<: *archive_template
  variables:
    GIT_STRATEGY: none
    ARCHIVE_NAME: ${CI_PROJECT_NAME}-linux_offscreen-${CI_COMMIT_REF_SLUG}.tar.bz2
  dependencies:
    - build:linux_offscreen

archive:android:
  <<: *archive_template
  variables:
    GIT_STRATEGY: none
    ARCHIVE_NAME: ${CI_PROJECT_NAME}-android-${CI_COMMIT_REF_SLUG}.tar.bz2
  dependencies:
    - build:android

archive:html5:
  <<: *archive_template
  variables:
    GIT_STRATEGY: none
    ARCHIVE_NAME: ${CI_PROJECT_NAME}-html5-${CI_COMMIT_REF_SLUG}.tar.bz2
  dependencies:
    - build:html5

archive:linux:
  <<: *archive_template
  variables:
    GIT_STRATEGY: none
    ARCHIVE_NAME: ${CI_PROJECT_NAME}-linux-${CI_COMMIT_REF_SLUG}.tar.bz2
  dependencies:
    - build:linux

archive:windows64:
  <<: *archive_template
  variables:
    GIT_STRATEGY: none
    ARCHIVE_NAME: ${CI_PROJECT_NAME}-windows64-${CI_COMMIT_REF_SLUG}.tar.bz2
  dependencies:
    - build:windows64

archive:windows64_offscreen:
  <<: *archive_template
  variables:
    GIT_STRATEGY: none
    ARCHIVE_NAME: ${CI_PROJECT_NAME}-windows64_offscreen-${CI_COMMIT_REF_SLUG}.tar.bz2
  dependencies:
    - build:windows64_offscreen

release:
  stage: release
  image: registry.aerys.in/aerys/gitlab-flow-release:latest
  only:
    - tags
  variables:
    GIT_STRATEGY: none
  script: gitlab-flow-release --private-token "${RELEASE_PRIVATE_TOKEN}" release

trigger:
  stage: trigger
  variables:
    GIT_STRATEGY: none
  dependencies: []
  only:
      - master
      - dev
      - /^client\/.*$/
      - /^feature\/.*$/
      - /^fix\/.*$/
      - tags
  script:
    - curl --request POST --form "token=${SMARTSHAPE_CONVERTER_TRIGGER}" --form "ref=${CI_COMMIT_REF_NAME}" https://git.aerys.in/api/v4/projects/17/trigger/pipeline
    - curl --request POST --form "token=${SMARTSHAPE_APP_TRIGGER}" --form "ref=${CI_COMMIT_REF_NAME}" https://git.aerys.in/api/v4/projects/15/trigger/pipeline
